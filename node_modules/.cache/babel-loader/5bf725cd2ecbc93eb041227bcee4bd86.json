{"ast":null,"code":"var _jsxFileName = \"/Users/jagannathan/Excellence/sample-app/src/TeamDropdown.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react'; //import { Dropdown } from 'react-bootstrap';\n//import styled from 'styled-components';\n//import { DropDownList } from \"@progress/kendo-react-dropdowns\";\n\nimport { Dropdown } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryOptions = [];\nconst [overview, setOverview] = useState([]);\nuseEffect(() => {\n  fetch(\"/api/getTeams\").then(resp => resp.json()).then(res => setOverview(res));\n}, []);\n/*\nconst DropdownExampleSearchSelection = () => (\n  <Dropdown\n    placeholder='Select Team'\n    fluid\n    search\n    selection\n    options={overview}\n  />\n)\n*/\n//function TeamDropdown(){\n\n/*\n    const sizes = [\"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\"];\n    const [value, setValue] = React.useState(\"Large\");\n\n    const handleChange = (event) => {\n      setValue(event.target.value);\n    };  \n*/\n//return (\n//  <div>\n//    <div>T-shirt size:</div>\n//    <DropDownList data={sizes} value={value} onChange={handleChange} />\n//  </div>\n//);\n//}\n\nthis.countryData = [{\n  value: 'USA',\n  name: 'USA'\n}, {\n  value: 'CANADA',\n  name: 'CANADA'\n}];\n\n/*#__PURE__*/\n_jsxDEV(\"select\", {\n  name: \"country\",\n  value: this.state.data.country,\n  children: this.countryData.map((e, key) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e.value,\n      children: e.name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 1\n}, this);\n\nexport default DropdownExampleSearchSelection;","map":{"version":3,"sources":["/Users/jagannathan/Excellence/sample-app/src/TeamDropdown.js"],"names":["React","useState","useEffect","Dropdown","countryOptions","overview","setOverview","fetch","then","resp","json","res","countryData","value","name","state","data","country","map","e","key","DropdownExampleSearchSelection"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC,C,CACA;AACA;AACA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC;AACAC,SAAS,CAAC,MAAM;AACdK,EAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA4BC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAApC,EACCF,IADD,CACMG,GAAG,IACPL,WAAW,CAACK,GAAD,CAFb;AAGD,CAJQ,EAIN,EAJM,CAAT;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AAGJ;;AAEA,KAAKC,WAAL,GAAmB,CACjB;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CADiB,EAEjB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAFiB,CAAnB;;AAKA;AAAA;AAAQ,EAAA,IAAI,EAAC,SAAb;AAAuB,EAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAA9C;AAAA,YACG,KAAKL,WAAL,CAAiBM,GAAjB,CAAqB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC9B,wBAAO;AAAkB,MAAA,KAAK,EAAED,CAAC,CAACN,KAA3B;AAAA,gBAAmCM,CAAC,CAACL;AAArC,OAAaM,GAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFA;AADH;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeC,8BAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, {useState,useEffect} from 'react'\n//import { Dropdown } from 'react-bootstrap';\n//import styled from 'styled-components';\n//import { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport { Dropdown } from 'semantic-ui-react'\n\nconst countryOptions = []\nconst [overview,setOverview]=useState([]);\nuseEffect(() => {\n  fetch(\"/api/getTeams\").then(resp => resp.json())\n  .then(res => \n    setOverview(res))\n}, [])\n/*\nconst DropdownExampleSearchSelection = () => (\n  <Dropdown\n    placeholder='Select Team'\n    fluid\n    search\n    selection\n    options={overview}\n  />\n)\n*/\n//function TeamDropdown(){\n\n\n\n/*\n    const sizes = [\"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\"];\n    const [value, setValue] = React.useState(\"Large\");\n\n    const handleChange = (event) => {\n      setValue(event.target.value);\n    };  \n*/\n    //return (\n    //  <div>\n    //    <div>T-shirt size:</div>\n    //    <DropDownList data={sizes} value={value} onChange={handleChange} />\n    //  </div>\n    //);\n  \n\n//}\n\nthis.countryData = [\n  { value: 'USA', name: 'USA' },\n  { value: 'CANADA', name: 'CANADA' }            \n];\n\n<select name=\"country\" value={this.state.data.country}>\n  {this.countryData.map((e, key) => {\n      return <option key={key} value={e.value}>{e.name}</option>;\n  })}\n</select>\n\nexport default DropdownExampleSearchSelection\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}