{"version":3,"sources":["auth/index.js","App.js","reportWebVitals.js","index.js"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","access_token","then","r","json","useAuth","authFetch","login","logout","PrivateRoute","Component","component","rest","logged","render","props","to","App","path","Login","Secret","Home","useEffect","resp","console","log","useState","username","setUsername","password","setPassword","onClick","action","type","placeholder","onChange","e","target","value","preventDefault","opts","JSON","stringify","message","setMessage","response","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sOAEO,EACHA,6BAAmB,CACfC,eAAe,eACfC,cAAc,SAACC,GAAD,OAAWC,MAAM,eAAgB,CAC3CC,OAAQ,OACRC,KAAMH,EAAMI,eAEfC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,aAPd,mBAAOC,EAAP,KAAgBC,EAAhB,KAA2BC,EAA3B,KAAkCC,EAAlC,K,uBCQDC,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,iBAC1D,EAAiBP,IAAVQ,EAAP,oBAEA,OAAO,cAAC,IAAD,2BAAWD,GAAX,IAAiBE,OAAQ,SAACC,GAAD,OAC9BF,EACI,cAACH,EAAD,eAAeK,IACf,cAAC,IAAD,CAAUC,GAAG,gBAIN,SAASC,IACtB,OACE,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMD,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,2BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,EAAD,CAAcD,KAAK,UAAUP,UAAWS,IACxC,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAACG,EAAD,cAQZ,SAASA,IAIP,OAHAC,qBAAU,WACRxB,MAAM,QAAQI,MAAK,SAAAqB,GAAI,OAAIA,EAAKnB,UAAQF,MAAK,SAAAqB,GAAI,OAAIC,QAAQC,IAAIF,QAChE,IACI,sCAGT,SAASJ,IACP,MAAgCO,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAgCA,EAAiBzB,IAAVQ,EAAP,oBAEF,OACE,gCACE,uCACEA,EAoBA,wBAAQkB,QAAS,kBAAMvB,KAAvB,oBApBQ,uBAAMwB,OAAO,IAAb,UACR,8BACE,uBAAOC,KAAK,OACVC,YAAY,WACZC,SAhBqB,SAACC,GAC5BR,EAAYQ,EAAEC,OAAOC,QAgBfA,MAAOX,MAGX,8BACE,uBACEM,KAAK,WACLC,YAAY,WACZC,SApBqB,SAACC,GAC5BN,EAAYM,EAAEC,OAAOC,QAoBfA,MAAOT,MAGX,wBAAQE,QAnDU,SAACK,GACrBA,EAAEG,iBACFf,QAAQC,IAAI,qBACZ,IAAIe,EAAO,CACT,SAAYb,EACZ,SAAYE,GAEdL,QAAQC,IAAIe,GACZ1C,MAAM,aAAc,CAClBC,OAAQ,OACRC,KAAMyC,KAAKC,UAAUF,KACpBtC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAL,GACAA,EAAMI,cACRM,EAAMV,GACN2B,QAAQC,IAAI5B,IAGZ2B,QAAQC,IAAI,gDAiCgBQ,KAAK,SAArC,6BASN,SAASb,IACP,MAA8BM,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAeA,OAbAtB,qBAAU,WACRhB,EAAU,kBAAkBJ,MAAK,SAAA2C,GAC/B,OAAwB,MAApBA,EAASC,QACXF,EAAW,gCACJ,MAEFC,EAASzC,UACfF,MAAK,SAAA2C,GACFA,GAAYA,EAASF,SACvBC,EAAWC,EAASF,cAGvB,IAED,0CAAaA,KC9IjB,IAYeI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASzC,OACP,cAAC,IAAM0C,WAAP,UACE,cAACvC,EAAD,MAEFwC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.dcc6c013.chunk.js","sourcesContent":["import { createAuthProvider } from \"react-token-auth\";\n\nexport const [useAuth, authFetch, login, logout] = \n    createAuthProvider({\n        accessTokenKey:'access-token',\n        onUpdateToken:(token) => fetch('/api/refresh', {\n            method: 'POST',\n            body: token.access_token\n        })\n        .then(r => r.json())\n    });","import React, { useState,useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport { login, useAuth, authFetch, logout } from \"./auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n\n  return <Route {...rest} render={(props) => (\n    logged\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n}\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/secret\">Secret</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/secret\" component={Secret} />\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  useEffect(() => {\n    fetch(\"/api\").then(resp => resp.json()).then(resp => console.log(resp))\n  }, [])\n  return <h2>Home</h2>;\n}\n\nfunction Login() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onSubmitClick = (e)=>{\n    e.preventDefault()\n    console.log(\"You pressed login\")\n    let opts = {\n      'username': username,\n      'password': password\n    }\n    console.log(opts)\n    fetch('/api/login', {\n      method: 'post',\n      body: JSON.stringify(opts)\n    }).then(r => r.json())\n      .then(token => {\n        if (token.access_token){\n          login(token)\n          console.log(token)          \n        }\n        else {\n          console.log(\"Please type in correct username/password\")\n        }\n      })\n  }\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value)\n  }\n  const [logged] = useAuth();\n\nreturn (\n  <div>\n    <h2>Login</h2>\n    {!logged? <form action=\"#\">\n      <div>\n        <input type=\"text\" \n          placeholder=\"Username\" \n          onChange={handleUsernameChange}\n          value={username} \n        />\n      </div>\n      <div>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={handlePasswordChange}\n          value={password}\n        />\n      </div>\n      <button onClick={onSubmitClick} type=\"submit\">\n        Login Now\n      </button>\n    </form>\n    : <button onClick={() => logout()}>Logout</button>}\n  </div>\n)\n}\n\nfunction Secret() {\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    authFetch(\"/api/protected\").then(response => {\n      if (response.status === 401){\n        setMessage(\"Sorry you aren't authorized!\")\n        return null\n      }\n      return response.json()\n    }).then(response => {\n      if (response && response.message){\n        setMessage(response.message)\n      }\n    })\n  }, [])\n  return (\n    <h2>Secret: {message}</h2>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}